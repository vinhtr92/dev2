@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
    padding: $padding-vertical $padding-horizontal !important;
    font-size: $font-size-small !important;
    line-height: $line-height;
    border-radius: $border-radius !important ;
  }


.btn {
    color: $btn-default-color !important;
    display: inline-block;
    margin-bottom: 0; // For input.btn
    font-weight: $btn-font-weight;
    text-align: center;
    text-transform: $btn-text-transform;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid transparent !important;
    white-space: nowrap;
    @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-small, $line-height-base, $btn-border-radius-small);


    @include user-select(none);
  
    &,
    &:active,
    &.active {
      &:focus,
      &.focus {
        @include tab-focus;
      }
    }
  
    &:hover,
    &:focus,
    &.focus {
      color: color-yiq($white) ;
      text-decoration: none;
    }
  
    &:active,
    &.active {
      outline: 0;
      background-image: none;
      @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
    }
  
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
      cursor: $cursor-disabled;
      @include opacity(.65);
      @include box-shadow(none);
    }
  
    // [converter] extracted a& to a.btn

    &.btn-top-download {
        background-color: rgba($btn-default-color, 0.1);
        border: solid 1px rgba($btn-default-color, 0.2);
    }


  }

  @each $color, $value in $theme-colors {
  .btn-#{ $color } {
      //   background-image: radial-gradient(circle at 0 0, lighten($value,8%), $value);
    // color: color-yiq($value) !important;
    background-image: radial-gradient(circle at 0 0,lighten($value, 10%),$value) !important;
    transition: all .3s;

    &:hover,
    &:focus,
    &.focus {
      color: color-yiq($value) !important;

      background-image: radial-gradient(circle at 0 0,lighten($value, 15%),$value),
      linear-gradient(rgba($btn-default-color, 0.15), rgba($btn-default-color, 0.15));
      box-shadow: 0 0 0 2px rgba($value, 0.5);
    }

    &:focus {
      box-shadow: 0 0 0 3px rgba($value, 0.5) !important;
    }
  }

  .btn.btn-outline-#{$color} {
    border: 1px solid $value !important;
    background: none;
    color: color-yiq($value) !important;


    &:hover,
    &:focus,
    &.focus {
      background: $value;
      color: color-yiq($value) !important;
    }
  }

  .btn.btn-plain-#{$color} {
    color: $gray-900 !important;
    background: none !important;
    /* khong co padding left and right */
    padding: 0 !important;

    &:hover,
    &:focus,
    &.focus {
      color: $value !important;
    }
  }
}




.btn-lg {
    // line-height: ensure even-numbered height of button next to large input
    @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-small, $line-height-large, $btn-border-radius-small);
  }
  .btn-sm {
    // line-height: ensure proper height of button next to small input
    @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
  }
  .btn-xs {
    @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
  }

